"use strict";(self.webpackChunkgeostyler_site=self.webpackChunkgeostyler_site||[]).push([[771],{28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>i});var n=o(96540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},67418:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"type":"mdx","permalink":"/geostyler-docusaurus/about/","source":"@site/src/pages/about/index.md","title":"About GeoStyler","description":"GeoStyler is about styling maps. Maybe you are a developer looking for a set of UI components","frontMatter":{},"unlisted":false}');var r=o(74848),s=o(28453);const a={},i="About GeoStyler",l={},c=[{value:"React Library",id:"react-library",level:3},{value:"Style Parsers and Transformations",id:"style-parsers-and-transformations",level:3},{value:"Batch Conversion with the GeoStyler CLI",id:"batch-conversion-with-the-geostyler-cli",level:3},{value:"Conversion over the Web",id:"conversion-over-the-web",level:3},{value:"Invitation",id:"invitation",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"about-geostyler",children:"About GeoStyler"})}),"\n",(0,r.jsx)(t.p,{children:"GeoStyler is about styling maps. Maybe you are a developer looking for a set of UI components\nto build custom and flexible styling widgets for your geospatial application. Maybe you\nare a cartographer trying to get the style you worked so hard on in your favorite (Q)GIS into the\nweb. Or maybe you are a project lead worrying about migrating all your styles to that new fancy\nrendering engine everyone (and in particular your boss) is talking about. The GeoStyler ecosystem is\nhere to help."}),"\n",(0,r.jsx)(t.h3,{id:"react-library",children:"React Library"}),"\n",(0,r.jsxs)(t.p,{children:["One key project of the ecosystem is the React Library providing developers with widgets and\ntools to build powerful and flexible UIs to style geodata over the web. To get an idea of\nits features and capabilities you can have a look at the ",(0,r.jsx)(t.a,{href:"https://geostyler.github.io/geostyler-demo/",children:"Demo Application"})," or dive into the ",(0,r.jsx)(t.a,{href:"https://github.com/geostyler/geostyler-demo",children:"Source Code"}),". If you want to learn how to build your own custom map styling applications\nbe sure to look into the ",(0,r.jsx)(t.a,{href:"/docs/beginner-workshop/",children:"beginner tutorials"})," and the ",(0,r.jsx)(t.a,{href:"https://geostyler.github.io/geostyler/latest/index.html",children:"documentation"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"style-parsers-and-transformations",children:"Style Parsers and Transformations"}),"\n",(0,r.jsxs)(t.p,{children:["GeoStyler supports multiple style formats used in the open source geospatial ecosystem:\nQML from QGIS, Mapbox JSON used in MapLibre, OpenLayers Styling Format and the OGC-standardized\nSLD format used by Geoserver. Each of those can be transformed into one of the others. Each style parser is provided as seperate Github\nrepository and NPM package. You can get an overview of the available style parsers and\nlinks ",(0,r.jsx)(t.a,{href:"/parsers/",children:"here"}),". Be aware that not every styling capability of a particular style\nis supported. Luckily, GeoStyler is open source and it is easy to contribute and get\ninvolved in the community. Styles can either be transformed using JavaScript in your application\nor with the GeoStyler command-line interface (CLI)."]}),"\n",(0,r.jsx)(t.h3,{id:"batch-conversion-with-the-geostyler-cli",children:"Batch Conversion with the GeoStyler CLI"}),"\n",(0,r.jsxs)(t.p,{children:["The GeoStyler command-line interface let's you convert single style files or entire directories from one of the\nsupported formats into another. Assuming you have node installed on your system, installation\nis as easy as typing ",(0,r.jsx)(t.code,{children:"npm install -g geostyler-cli"}),". Once you have the CLI installed you\ncan transform a style, e.g. from QGIS QML format to SLD directly from the command-line:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"geostyler -s qgis -t sld -o output.sld input.qml\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Make sure to have a look at the ",(0,r.jsx)(t.a,{href:"https://github.com/geostyler/geostyler-cli",children:"repository"})," for\nfurther instructions and examples."]}),"\n",(0,r.jsx)(t.h3,{id:"conversion-over-the-web",children:"Conversion over the Web"}),"\n",(0,r.jsxs)(t.p,{children:["Maybe a conversion over the web via HTTP requests is the way to go for your setup and workflow.\nIf so, make sure to have a look at the GeoStyler REST API. Using GET and POST\nrequests you can transform your style over the web. The REST API is built on top of the popular\nNode.js framework ",(0,r.jsx)(t.code,{children:"express"}),". Check out the ",(0,r.jsx)(t.a,{href:"https://services.meggsimum.de/geostyler-rest/api-docs",children:"documentation"})," and the ",(0,r.jsx)(t.a,{href:"https://github.com/geostyler/geostyler-rest",children:"repository"}),".\nSimilar to the example above, the following cURL call will transform a simple Mapbox (JSON-Format) style to SLD (XML):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:'curl -X \'POST\' \\\n  \'https://services.meggsimum.de/geostyler-rest/api/rpc/transform?sourceFormat=Mapbox&targetFormat=SLD\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "version": 8,\n  "name": "Demo Style",\n  "layers": [\n    {\n      "id": "Rule 1",\n      "type": "circle",\n      "paint": {\n        "circle-radius": 16,\n        "circle-color": "#4b33c8"\n      }\n    }\n  ]\n}\'\n'})}),"\n",(0,r.jsx)(t.h3,{id:"invitation",children:"Invitation"}),"\n",(0,r.jsx)(t.p,{children:"We hope that GeoStyler can help you building open geospatial tools\nand maps. If it does, we invite you to get involved: Whether you\nare a developer providing bug fixes and features, or a user improving\nthe documentation or writing tutorials. We wish you happy and stylish\nmapping."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);