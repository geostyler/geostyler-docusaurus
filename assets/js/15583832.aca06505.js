"use strict";(self.webpackChunkgeostyler_site=self.webpackChunkgeostyler_site||[]).push([[5952],{14291:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"beginner-workshop/style-parser/parse-ol","title":"Parsing an OpenLayers Style","description":"Parsing an OpenLayers style requires the same steps as parsing SLDs.","source":"@site/docs/beginner-workshop/style-parser/parse-ol.md","sourceDirName":"beginner-workshop/style-parser","slug":"/beginner-workshop/style-parser/parse-ol","permalink":"/geostyler-docusaurus/docs/beginner-workshop/style-parser/parse-ol","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Parsing SLD","permalink":"/geostyler-docusaurus/docs/beginner-workshop/style-parser/parse-sld"},"next":{"title":"Converting Styles","permalink":"/geostyler-docusaurus/docs/beginner-workshop/style-parser/convert"}}');var t=s(74848),l=s(28453);const o={},a="Parsing an OpenLayers Style",i={},c=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"parsing-an-openlayers-style",children:"Parsing an OpenLayers Style"})}),"\n",(0,t.jsxs)(n.p,{children:["Parsing an OpenLayers style requires the same steps as parsing SLDs.\nWe will again use the ",(0,t.jsx)(n.code,{children:"readStyle"})," and ",(0,t.jsx)(n.code,{children:"writeStyle"})," methods of the parsers. However, this time, we will use\nthe ",(0,t.jsx)(n.code,{children:"geostyler-openlayers-parser"})," and do not use an SLD string, but rather an OpenLayers style object."]}),"\n",(0,t.jsxs)(n.p,{children:["The installation of the ",(0,t.jsx)(n.code,{children:"geostyler-openlayers-parser"})," was already done in a previous chapter via"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i geostyler-openlayers-parser\n"})}),"\n",(0,t.jsx)(n.p,{children:"Next, we have to import the parser"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import OlParser from 'geostyler-openlayers-parser';\n"})}),"\n",(0,t.jsx)(n.p,{children:"and instantiate it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const olParser = new OlParser();\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now, we just need an OpenLayers style that should be parsed"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { Stroke, Fill, Style, Circle } from 'ol/style';\n\nconst olStyle = new Style({\n    stroke: new Stroke({\n        color: 'rgba(255, 255, 255, 1.0)',\n        width: 1\n    }),\n    fill: new Fill({\n        color: 'rgba(0, 0, 0, 1)'\n    }),\n    image: new Circle({\n        fill: new Fill({\n            color: 'rgba(255, 0, 0, 1.0)'\n        }),\n        radius: 5\n    })\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This can now be parsed via ",(0,t.jsx)(n.code,{children:"readStyle"})," and ",(0,t.jsx)(n.code,{children:"writeStyle"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"olParser.readStyle(olStyle)\n    .then((geostylerStyle) => {\n        // Run your actions with the read style here, e.g.\n        console.log(geostylerStyle.output);\n    });\n\nolParser.writeStyle(geostylerStyle)\n    .then((olStyle) => {\n        // Run your actions with the written style here, e.g.\n        console.log(JSON.stringify(olStyle.output));\n    });\n"})}),"\n",(0,t.jsx)(n.p,{children:"For our application, this should work as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import React, { useState, useEffect } from 'react';\nimport { Stroke, Fill, Style, Circle } from 'ol/style';\n\nimport OlParser from 'geostyler-openlayers-parser';\n\nconst olParser = new OlParser();\n\nfunction App() {\n\n  const originalOlStyle = new Style({\n      stroke: new Stroke({\n          color: 'rgba(255, 255, 255, 1.0)',\n          width: 1\n      }),\n      fill: new Fill({\n          color: 'rgba(0, 0, 0, 1)'\n      }),\n      image: new Circle({\n          fill: new Fill({\n              color: 'rgba(255, 0, 0, 1.0)'\n          }),\n          radius: 5\n      })\n  });\n\n  const [olStyle, setOlStyle] = useState(originalOlStyle);\n  const [style, setStyle] = useState();\n\n  useEffect(() =>  {\n    olParser.readStyle(olStyle)\n      .then((gsStyle) => {\n        setStyle(gsStyle.output);\n      });\n  }, [olStyle]);\n\n  useEffect(() => {\n    if (!style) {\n      return;\n    }\n\n    olParser.writeStyle(style)\n      .then((newOlStyle) => {\n        setOlStyle(newOlStyle.output);\n      });\n  }, [style]);\n\n  return (\n    <div>\n      <p>\n        {JSON.stringify(originalOlStyle)}\n      </p>\n      <p>\n        {JSON.stringify(style)}\n      </p>\n      <p>\n        {JSON.stringify(olStyle)}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(99670).A+"",children:(0,t.jsx)(n.img,{alt:"Read and written OpenLayers style",src:s(50854).A+"",width:"1408",height:"191"})})}),"\n",(0,t.jsx)(n.p,{children:"The first section shows the original OpenLayers style. The second section shows the parsed OpenLayers style as GeoStyler style. The third\nsection shows the written OpenLayers style."})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var r=s(96540);const t={},l=r.createContext(t);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(l.Provider,{value:n},e.children)}},50854:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/ol-parsed-7a5df3576195384cd70850a95775152c.png"},99670:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/files/ol-parsed-7a5df3576195384cd70850a95775152c.png"}}]);